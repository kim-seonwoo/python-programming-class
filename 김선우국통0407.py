# -*- coding: utf-8 -*-
"""김선우국통0407

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S8QxQWcRIX3w6wtoxed_4E66USkcL_6e
"""

text='Python is Fun!'
tt = text.replace(' ','')
print(tt)

"""5. 함수

"""

def a_rectangle_area(): # 매개변수 :X 반환값:X
    print(5*7)
def b_rectangle_area(a,b):# 매개변수 : O 반환값:X
    print(a*b)
def c_rectangle_area():# 매개변수 :X 반환값:O
    return (5*7)
def d_rectangle_area(a,b):# 매개변수 : O 반환값:O
    return(a*b)

a_rectangle_area()
b_rectangle_area(5,7)
print(c_rectangle_area())
print(d_rectangle_area(5,7))

def f(x):
    y = x
    x=5
    return y*y

x=3
print(f(x))
print(x)

def f(x):
    y = x
    print(id(x))
    print(id(y))
    x=5
    print(id(x))
    return y*y,x

x=3
print(f(x))
print(x)
print(id(x))

"""함수가 변수를 호출하는 방식
값에 의한 호출, 참조 호출(메모리 주소)
"""

#참조호출, call by refernence

def spam(eggs):
    eggs.append(1) #기족 객체의 주소값에 [1] 더함
    eggs = [2,3] #새로운 객체 생성

ham=[0]
spam(ham)
print(ham)

def spam(eggs):
    eggs.append(1) 
    print(id(eggs))
    eggs = [2,3] 
    print(id(eggs))


ham=[0]
spam(ham)
print(ham)
print(id(ham))


#재할당 되기 전까지는 같은 주소를 사용한다.
#값이 재할당되면 새 메모리 주소

def f():
    s = 'london'
    print(id(s))
    print(s)

s='paris'
print(id(s))
f()
print(s)