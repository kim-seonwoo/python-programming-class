# -*- coding: utf-8 -*-
"""김선우국통0512

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E07U1MjiwLioOtFZor4KBc_dWzSw7ved
"""

# '__'처리를 통하여 정보를 은닉할 수 있음.

#3
class Person(object):
    def __init__(self,name):
        self.name=name

def language(self):
    pass

class Earthling(Person):
    def language(self,lang):
        return lang

class Groot(Person):
    def language(self,lang):
        return "I'm groot"

name=['Hanbit', 'Dr,strange','Groot']
country = ['Korea','USA','Galaxy']
language=['Korean','English','Groot']



for idx,n in enumerate(name):
    if country[idx].upper() != 'GALAXY':
        person=Earthling(n)
        print(person.language(language[idx]))
    else:
        groot=Groot(n)
        print(groot.language(language[idx]))

class Terran(object):
    def __init__(self,mineral):
        self.scv=4
        self.marine=0
        self.medic=0
        self.mineral = mineral

    def command(self,SCV=False):
        self.mineral+=8*self.scv
        if SCV:
            self.scv+=1
            self.mineral-=10
    def barrack(self, Marine=False,Medic=False):
        self.mineral+=8*self.scv
        if Marine:
            self.marine+=1
            self.mineral -=15


        if Medic:
            self.medic+=1
            self.mineral-=25

    def check_source(self):
        print("Mineral:"+str(self.mineral))

User = Terran(50)
User.command(True)
User.barrack(True,True)
User.check_source()

"""chapter 12 예외 처리와 파일 다루기 (p.424~)

read(): 파일을 열 때 처음 부터 끝까지 모든 내용을 가져옴
readline(): 호출될 떄 한 줄 씩 읽어옴
"""

dir = ''
with open(dir,'a',encoding='utf8')
for i in range(1,11):
    data = "%d번째줄이다.\n"%i
    f.write(data)


f.clase()

"""chapter 6 문자열"""

import sys
print(sys.getsizeof("a"),sys.getsizeof("ab"),sys.getsizeof("abc"))

#철자가 하나 늘어날때마다 1바이트씩 크기가 증가함

"""# 문자열 함수

"""

text='python is fun'
print(text.upper())
print(len(text))
print(text.lower())
print(text.title()) #각 단어의 앞글자를 대문자로 변환
print(text.capitalize()) # 첫 문자를 대문자로 변환

print(text.count('n')) #n의 개수 반환
print(text.find('n')) # n의 위치 반환
print(text.rfind('n')) # n의 오른쪽으로부터의 위치 반환
print(text.startswith('n')) 
print(text.endswith('n'))

text2= '  elephant   '
print(text2)
print(text2.strip()) # 공백 제거
print(text2.rstrip())
print(text2.lstrip())

text='python/is/fun'
print(text.split('/'))

#반환값은 리스트다

text='python3/is/ 9fun'
print(text.isdigit()) #문자열이 숫자인지 여부 반환
print(text.isalpha())
print(text.isalnum())
print(text.isupper())
print(text.islower())

"""문자열 서식 지정"""

