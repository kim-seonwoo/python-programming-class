# -*- coding: utf-8 -*-
"""김선우국통0609

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pXyigaJQdVdjaDiJBK_dOZMxVYcp1r0H
"""

import csv
dir='/content/ksw_data.csv'
f=open(dir,'r',encoding='cp949')
data = csv.reader(f,delimiter=',')
print(data)

f.close()

import csv
dir='/content/ksw_data.csv'
f=open(dir,'r',encoding='cp949')
data = csv.reader(f,delimiter=',')
print(data)
for row in data:
    print(row)
    # 변수명을 row라고 설정.
f.close()

"""['날짜', '지점', '평균기온(℃)', '최저기온(℃)', '최고기온(℃)']
['\t2013-01-01', '108', '-4.7', '-8.7', '0']
['\t2013-01-02', '108', '-11.7', '-15.1', '-4.8']
['\t2013-01-03', '108', '-13.2', '-16.4', '-9.3']
['\t2013-01-04', '108', '-10.7', '-14.8', '-5.8']
['\t2013-01-05', '108', '-7', '-12.1', '-1.2']
['\t2013-01-06', '108', '-6.3', '-9.4', '-2']
['\t2013-01-07', '108', '-5.1', '-8.8', '0.1']
['\t2013-01-08', '108', '-4.6', '-6.8', '-0.7']
['\t2013-01-09', '108', '-9', '-10.7', '-6.4']
['\t2013-01-10', '108', '-8.3', '-12.3', '-3.6']
['\t2013-01-11', '108', '-3.2', '-7.9', '1.4']
"""

import csv
dir='/content/ksw_data.csv'
f=open(dir,'r',encoding='cp949')
data = csv.reader(f,delimiter=',')
header=next(data)
print(header)
f.close()

import csv
dir='/content/ksw_data.csv'
f=open(dir,'r',encoding='cp949')
data = csv.reader(f,delimiter=',')
header=next(data)
for row in data: #데이터 불러서 한 행 씩 출력하기
    row[0]=row[0].replace('\t','')
    print(row)   #탭 제거를 하기 위한 반복문
f.close()

import csv
dir='/content/ksw_data.csv'
f=open(dir,'r',encoding='cp949')
data = csv.reader(f,delimiter=',')
header=next(data)
for row in data: #데이터 불러서 한 행 씩 출력하기
    row[0]=row[0].replace('\t','')
    if row[-1]=='':
        continue
    row[-1]=float(row[-1])  # 최고기온을 실수로 변환
    print(row)   #탭 제거를 하기 위한 반복문
f.close()



import csv
dir='/content/ksw_data.csv'
f=open(dir,'r',encoding='cp949')
data = csv.reader(f,delimiter=',')
header=next(data)
max_temp=-999
max_date=''
for row in data: #데이터 불러서 한 행 씩 출력하기
    if row[-1]=='':
        row[-1]=-999
    row[-1]=float(row[-1])
    if max_temp<row[-1]:
        max_date=row[0]
        max_temp=row[-1]
f.close()
print('기상 관측 이래 서울 최고 온도인 날은',max_date,'이고 온도는',max_temp,'입니다')

import csv
dir='/content/ksw_data.csv'
f=open(dir,'r',encoding='cp949')
data = csv.reader(f,delimiter=',')
next(data)
result=[]

for row in data:
    if row[-1] != "":
        result.append(float(row[-1]))


print(result)

import csv
import matplotlib.pyplot as plt


dir='/content/ksw_data.csv'
f=open(dir,'r',encoding='cp949')
data = csv.reader(f,delimiter=',')
next(data)
result=[]

for row in data:
    if row[-1] != "":
        if row[0].split('-')[1] == '11' and row[0].split('-')[2] == '14':
            result.append(float(row[-1]))

plt.hist(result, bins=100, color='r')
plt.show()

"""# 판다스 (pandas)"""

import pandas as pd
pd.Series([7,3,5,8])

import pandas as pd
x=pd.Series([7,3,5,8], index=['서울','광주','대구','부산'])
print(x)

import pandas as pd
x=pd.Series([7,3,5,8], index=['서울','광주','대구','부산'])
print(x[['서울','대구']])

import pandas as pd
x=pd.Series([7,3,5,8], index=['서울','광주','대구','부산'])
print(x.index) #index만 조회함

#인덱스나 값들로 정렬
import pandas as pd
x=pd.Series([7,3,5,8], index=['서울','광주','대구','부산'])
print(sorted(x.index))
print(sorted(x.values))

import pandas as pd
x=pd.Series([7,3,5,8], index=['서울','광주','대구','부산'])
y=pd.Series([4,4,5,6,], index=['서울','인천','대전','부산'])

print(x+y)

age={'민준':23,"하이":44,"바이":12}
x=pd.Series(age)

print(x)

#딕셔너리 형식의 데이터를 시리즈로 변환

names = ['민준', '서연', '현우', '민서', '동현', '수빈'] 
pdata = pd.Series(names)
a=pdata[3:6] 
print(a)

"""# 데이터 프레임"""

data={'age':[23,44,12,33],
      'name':['하이','바이','다이','라이'],
      'height':[122.3,145.2,166.2,123.2]}
# 딕셔너리 형태
x=pd.DataFrame(data,columns=['name','age','height'])

print(x)
print(x.name)
print(x.age)

ary=[[1,2],[3,4],[5,6]]
data=pd.DataFrame(ary,columns=['first','second'])

print(data)

ary=[[1,2],[3,4],[5,6]]
data=pd.DataFrame(ary,columns=['first','second'])
print(data.iloc[1])
# 1행의 내용만 출력하기

ary=[[1,2],[3,4],[5,6]]
data=pd.DataFrame(ary,columns=['first','second'])
print(data.iloc[:,-1])

#모든 행의 마지막 데이터만 출력

ary=[[1,2],[3,4],[5,6]]
data=pd.DataFrame(ary,columns=['first','second'])
print(data.iloc[:,0])

#모든 행의 첫 데이터만 출력

ary=[[1,2],[3,4],[5,6],[21,33],[12,1]]
data=pd.DataFrame(ary,columns=['first','second'])
print(data.head(2))

#첫 행부터 입력한 수만큼의 행 만 출력
# 디폴트는 5개

ary=[[1,2],[3,4],[5,6],[21,33],[12,1]]
data=pd.DataFrame(ary,columns=['first','second'])
print(data.tail(2))

# 뒷 부분 n행 출력

#특정 항목만 선택하여 지정하거나 출력할때 boolean값 이용
import pandas as pd
ary=[[1,2],[3,4],[5,6],[21,33],[12,1]]
data=pd.DataFrame(ary,columns=['first','second'])
bools=[False,True,True,False,True]
data.second[bools]
# second값을 출력하는데, bools가 True인 값만..

